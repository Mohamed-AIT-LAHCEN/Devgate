{"ast":null,"code":"import \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport { auth } from '../firebase';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport HomeView from '../views/HomeView.vue';\nimport DashboardView from '../views/DashboardView.vue';\nimport SignUp from '../components/signUp.vue';\nimport Login from '../components/Login.vue';\nvar routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/signup',\n  name: 'signup',\n  component: SignUp\n}, {\n  path: '/login',\n  name: 'login',\n  component: Login\n}, {\n  path: '/dashboard',\n  name: 'dashboard',\n  component: DashboardView,\n  meta: {\n    requiresAuth: true\n  }\n}];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes\n});\n\n// Navigation guard\nrouter.beforeEach(function (to, from, next) {\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    onAuthStateChanged(auth, function (user) {\n      if (user) {\n        next();\n      } else {\n        next('/login');\n      }\n    });\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","auth","onAuthStateChanged","HomeView","DashboardView","SignUp","Login","routes","path","name","component","meta","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","user"],"sources":["C:/Users/thinkpad/Desktop/Devgate/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport { auth } from '../firebase'\r\nimport { onAuthStateChanged } from 'firebase/auth'\r\nimport HomeView from '../views/HomeView.vue'\r\nimport DashboardView from '../views/DashboardView.vue'\r\nimport SignUp from '../components/signUp.vue'\r\nimport Login from '../components/Login.vue'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'home',\r\n    component: HomeView\r\n  },\r\n  {\r\n    path: '/signup',\r\n    name: 'signup',\r\n    component: SignUp\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'login',\r\n    component: Login\r\n  },\r\n  {\r\n    path: '/dashboard',\r\n    name: 'dashboard',\r\n    component: DashboardView,\r\n    meta: { requiresAuth: true }\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\n// Navigation guard\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        next()\r\n      } else {\r\n        next('/login')\r\n      }\r\n    })\r\n  } else {\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router\r\n"],"mappings":";;;;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,SAASC,IAAI,QAAQ,aAAa;AAClC,SAASC,kBAAkB,QAAQ,eAAe;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,KAAK,MAAM,yBAAyB;AAE3C,IAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEL;AACb,CAAC,EACD;EACEG,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEJ;AACb,CAAC,EACD;EACEE,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEN,aAAa;EACxBO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,IAAMC,MAAM,GAAGd,YAAY,CAAC;EAC1Be,OAAO,EAAEd,gBAAgB,CAACe,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CV,MAAM,EAANA;AACF,CAAC,CAAC;;AAEF;AACAM,MAAM,CAACK,UAAU,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAK;EACpC,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAACb,IAAI,CAACC,YAAY;EAAA,EAAC,EAAE;IACvDV,kBAAkB,CAACD,IAAI,EAAE,UAACwB,IAAI,EAAK;MACjC,IAAIA,IAAI,EAAE;QACRJ,IAAI,CAAC,CAAC;MACR,CAAC,MAAM;QACLA,IAAI,CAAC,QAAQ,CAAC;MAChB;IACF,CAAC,CAAC;EACJ,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}